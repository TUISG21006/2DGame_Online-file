=================================[server.js]===================================

var express = require("express"),app = express(),http = require("http"),server = http.createServer(app),io = require("socket.io").listen(server);

app.use("/", express.static(__dirname )); //このディレクトリの奴を使用可的な
server.listen(8081);
var room_num = 0;
// S04. connectionイベント・データを受信する
io.sockets.on('connection', function(socket) { 
    var name;
    var room;
    socket.on("room_in",function(room1){
        socket.join(room1);
        room = room1;
        socket.emit("jou",room1)
        console.log(room1);
    });
    socket.on("hoge",function(data){
        //io.to(room).emit;
        //var id = socket.id;
        //console.log(id);
        //name = data.value;
        //socket.broadcast.emit('server_to_client', id);
    })
    socket.on("client_to_server",function(data){
        console.log(data+room);
        //console.log(data.room);
        //ルーム内
        //io.to(room).emit("server_to_client",data);
        
        //socket.broadcast.emit("server_to_client",data);

    })
});

============================[index.html]============================
<!DOCTYPE html>
<html>
<head>
    <title>テスト</title>
</head>
<!--socket.ioを使うのに必要-->
<script src="socket.io/socket.io.js"></script>

<body>
    <form name="contactForm" method="post" action="#">
        <p>Text</p>
<input type="text" id="Text" name="text" value="Test">
<input type="button" value="hoge" onclick="(hoge())"/>
</form>
<form name="form1">
<p>Select</p>
<select id="select" name="select">
  <option value="1">room1</option>
  <option value="2">room2</option>
  <option value="3">room3</option>
</select>
<input type="button" value="hoge" onclick="(hoge2())"/>
</form>

<script type="text/javascript">
//サーバと接続
var socket = io.connect();
//socket.emit("room_in");
var textbox = document.getElementById("Text")
var select = document.getElementById("select")
var value1 = textbox.value
var value2 = select.value

var test = setInterval(function(){
    //socket.emit("hoge",g);
    //console.log("hoge");
},1000)
function hoge(){
    textbox = document.getElementById("Text")
    value1 = textbox.value
    socket.emit("client_to_server",value1);
    //console.log(value1);
}

function hoge2(){
    select = document.getElementById("select");
    value2 = select.value
    socket.emit("room_in",value2);
}

socket.on("jou",function(room){
    console.log(room+" to acsess");
    alert(room+" to acsess");
})
socket.on("server_to_client",function(data){
    console.log(data);
})
</script>
</body>
</html>


    socket.on("hoge",function(data){
        //io.to(room).emit;
        //var id = socket.id;
        //console.log(id);
        //name = data.value;
        //socket.broadcast.emit('server_to_client', id);
    })
        socket.on("server_to_client",function(x,y,angle){
        socket.emit("jou",room)
        console.log(data+room);
        //console.log(data.room);
        //ルーム内
        //io.to(room).emit("server_to_client",data);
        
        //socket.broadcast.emit("server_to_client",data);

    })

    
const user_create = function(
    x = 1,
    y = 1,
    angle = 1,
    jump = 1,
    acsell = 1,
    up_flag = false,
    do_flag = false,
    le_flag=false,
    ri_flag=false){
        this.x = x;
        this.y = y;
        this.angle = 0;
        this.jump = 0;
        this.acsell = 0,
        this.up_flag = false,
        this.do_flag = false,
        this.le_flag=false,
        this.ri_flag=false
}